import s from 'src/utils/s'

const definition = (strings) => ({
	message0 : '%1',
	args0    : [
		{
			type    : 'field_dropdown',
			name    : 'VALUE',
			options : [
				[s(strings, 'block.blocks.keys.no-key'), 'NO_KEY'],
				[s(strings, 'block.blocks.keys.key-space'), 'KEY_SPACE'],

				[s(strings, 'block.blocks.keys.key-up'), 'KEY_UP'],
				[s(strings, 'block.blocks.keys.key-down'), 'KEY_DOWN'],
				[s(strings, 'block.blocks.keys.key-left'), 'KEY_LEFT'],
				[s(strings, 'block.blocks.keys.key-right'), 'KEY_RIGHT'],

				[s(strings, 'block.blocks.keys.key-0'), 'KEY_0'],
				[s(strings, 'block.blocks.keys.key-1'), 'KEY_1'],
				[s(strings, 'block.blocks.keys.key-2'), 'KEY_2'],
				[s(strings, 'block.blocks.keys.key-3'), 'KEY_3'],
				[s(strings, 'block.blocks.keys.key-4'), 'KEY_4'],
				[s(strings, 'block.blocks.keys.key-5'), 'KEY_5'],
				[s(strings, 'block.blocks.keys.key-6'), 'KEY_6'],
				[s(strings, 'block.blocks.keys.key-7'), 'KEY_7'],
				[s(strings, 'block.blocks.keys.key-8'), 'KEY_8'],
				[s(strings, 'block.blocks.keys.key-9'), 'KEY_9'],

				[s(strings, 'block.blocks.keys.key-a'), 'KEY_A'],
				[s(strings, 'block.blocks.keys.key-b'), 'KEY_B'],
				[s(strings, 'block.blocks.keys.key-c'), 'KEY_C'],
				[s(strings, 'block.blocks.keys.key-d'), 'KEY_D'],
				[s(strings, 'block.blocks.keys.key-e'), 'KEY_E'],
				[s(strings, 'block.blocks.keys.key-f'), 'KEY_F'],
				[s(strings, 'block.blocks.keys.key-g'), 'KEY_G'],
				[s(strings, 'block.blocks.keys.key-h'), 'KEY_H'],
				[s(strings, 'block.blocks.keys.key-i'), 'KEY_I'],
				[s(strings, 'block.blocks.keys.key-j'), 'KEY_J'],
				[s(strings, 'block.blocks.keys.key-k'), 'KEY_K'],
				[s(strings, 'block.blocks.keys.key-l'), 'KEY_L'],
				[s(strings, 'block.blocks.keys.key-m'), 'KEY_M'],
				[s(strings, 'block.blocks.keys.key-n'), 'KEY_N'],
				[s(strings, 'block.blocks.keys.key-o'), 'KEY_O'],
				[s(strings, 'block.blocks.keys.key-p'), 'KEY_P'],
				[s(strings, 'block.blocks.keys.key-q'), 'KEY_Q'],
				[s(strings, 'block.blocks.keys.key-r'), 'KEY_R'],
				[s(strings, 'block.blocks.keys.key-s'), 'KEY_S'],
				[s(strings, 'block.blocks.keys.key-t'), 'KEY_T'],
				[s(strings, 'block.blocks.keys.key-u'), 'KEY_U'],
				[s(strings, 'block.blocks.keys.key-v'), 'KEY_V'],
				[s(strings, 'block.blocks.keys.key-w'), 'KEY_W'],
				[s(strings, 'block.blocks.keys.key-x'), 'KEY_X'],
				[s(strings, 'block.blocks.keys.key-y'), 'KEY_Y'],
				[s(strings, 'block.blocks.keys.key-z'), 'KEY_Z'],

				[s(strings, 'block.blocks.keys.key-return'), 'KEY_RETURN'],
				[s(strings, 'block.blocks.keys.key-tab'), 'KEY_TAB'],

				[s(strings, 'block.blocks.keys.key-question_mark'), 'KEY_QUESTION_MARK'],
				[s(strings, 'block.blocks.keys.key-exclamation_point'), 'KEY_EXCLAMATION_POINT'],
				[s(strings, 'block.blocks.keys.key-period'), 'KEY_PERIOD'],
				[s(strings, 'block.blocks.keys.key-comma'), 'KEY_COMMA'],
				[s(strings, 'block.blocks.keys.key-colon'), 'KEY_COLON'],
				[s(strings, 'block.blocks.keys.key-semicolon'), 'KEY_SEMICOLON'],
				[s(strings, 'block.blocks.keys.key-minus_sign'), 'KEY_MINUS_SIGN'],
				[s(strings, 'block.blocks.keys.key-plus_sign'), 'KEY_PLUS_SIGN'],
				[s(strings, 'block.blocks.keys.key-asterisk'), 'KEY_ASTERISK'],
				[s(strings, 'block.blocks.keys.key-percent_sign'), 'KEY_PERCENT_SIGN'],
				[s(strings, 'block.blocks.keys.key-greater_than_sign'), 'KEY_GREATER_THAN_SIGN'],
				[s(strings, 'block.blocks.keys.key-less_than_sign'), 'KEY_LESS_THAN_SIGN'],
				[s(strings, 'block.blocks.keys.key-equal_sign'), 'KEY_EQUAL_SIGN'],
				[s(strings, 'block.blocks.keys.key-at_symbol'), 'KEY_AT_SYMBOL'],
				[s(strings, 'block.blocks.keys.key-number_sign'), 'KEY_NUMBER_SIGN'],
				[s(strings, 'block.blocks.keys.key-dollar_sign'), 'KEY_DOLLAR_SIGN'],
				[s(strings, 'block.blocks.keys.key-ampersand'), 'KEY_AMPERSAND'],
				[s(strings, 'block.blocks.keys.key-grave_accent'), 'KEY_GRAVE_ACCENT'],
				[s(strings, 'block.blocks.keys.key-tilde'), 'KEY_TILDE'],
				[s(strings, 'block.blocks.keys.key-underscore'), 'KEY_UNDERSCORE'],
				[s(strings, 'block.blocks.keys.key-slash'), 'KEY_SLASH'],
				[s(strings, 'block.blocks.keys.key-vertical_bar'), 'KEY_VERTICAL_BAR'],
				[s(strings, 'block.blocks.keys.key-backslash'), 'KEY_BACKSLASH'],
				[s(strings, 'block.blocks.keys.key-caret'), 'KEY_CARET'],
				[s(strings, 'block.blocks.keys.key-double_quotes'), 'KEY_DOUBLE_QUOTES'],
				[s(strings, 'block.blocks.keys.key-single_quote'), 'KEY_SINGLE_QUOTE'],
				[s(strings, 'block.blocks.keys.key-opening_brace'), 'KEY_OPENING_BRACE'],
				[s(strings, 'block.blocks.keys.key-closing_brace'), 'KEY_CLOSING_BRACE'],
				[s(strings, 'block.blocks.keys.key-opening_bracket'), 'KEY_OPENING_BRACKET'],
				[s(strings, 'block.blocks.keys.key-closing_bracket'), 'KEY_CLOSING_BRACKET'],
				[s(strings, 'block.blocks.keys.key-opening_parenthesis'), 'KEY_OPENING_PARENTHESIS'],
				[s(strings, 'block.blocks.keys.key-closing_parenthesis'), 'KEY_CLOSING_PARENTHESIS'],

				[s(strings, 'block.blocks.keys.key-esc'), 'KEY_ESC'],
				[s(strings, 'block.blocks.keys.key-left_alt'), 'KEY_LEFT_ALT'],
				[s(strings, 'block.blocks.keys.key-right_alt'), 'KEY_RIGHT_ALT'],
				[s(strings, 'block.blocks.keys.key-left_ctrl'), 'KEY_LEFT_CTRL'],
				[s(strings, 'block.blocks.keys.key-right_ctrl'), 'KEY_RIGHT_CTRL'],
				[s(strings, 'block.blocks.keys.key-left_shift'), 'KEY_LEFT_SHIFT'],
				[s(strings, 'block.blocks.keys.key-right_shift'), 'KEY_RIGHT_SHIFT'],
				[s(strings, 'block.blocks.keys.key-delete'), 'KEY_DELETE'],
				[s(strings, 'block.blocks.keys.key-backspace'), 'KEY_BACKSPACE'],
				[s(strings, 'block.blocks.keys.key-caps_lock'), 'KEY_CAPS_LOCK'],
			],
		},
	],
	output          : 'Key',
	category        : 'input',
	colour          : '#f580c5',
	colourSecondary : '#f75abb',
	colourTertiary  : '#f442b0',
	outputShape     : window.Blockly.OUTPUT_SHAPE_SQUARE,
})

export default definition
